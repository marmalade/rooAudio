/*
 * WARNING: this is an autogenerated file and will be overwritten by
 * the extension interface script.
 */
/*
 * This file contains the automatically generated loader-side
 * functions that form part of the extension.
 *
 * This file is awlays compiled into all loaders but compiles
 * to nothing if this extension is not enabled in the loader
 * at build time.
 */
#include "IwDebug.h"
#include "rooAudio_autodefs.h"
#include "s3eEdk.h"
#include "rooAudio.h"
//Declarations of Init and Term functions
extern s3eResult rooAudioInit();
extern void rooAudioTerminate();


// On platforms that use a seperate UI/OS thread we can autowrap functions
// here.   Note that we can't use the S3E_USE_OS_THREAD define since this
// code is oftern build standalone, outside the main loader build.
#if defined I3D_OS_IPHONE || defined I3D_OS_OSX || defined I3D_OS_LINUX || defined I3D_OS_WINDOWS

static void rooAudio_init_wrap()
{
    IwTrace(ROOAUDIO_VERBOSE, ("calling rooAudio func on main thread: rooAudio_init"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)rooAudio_init, 0);
}

static void rooAudio_play_wrap(const char * filename)
{
    IwTrace(ROOAUDIO_VERBOSE, ("calling rooAudio func on main thread: rooAudio_play"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)rooAudio_play, 1, filename);
}

static void rooAudio_stop_wrap()
{
    IwTrace(ROOAUDIO_VERBOSE, ("calling rooAudio func on main thread: rooAudio_stop"));
    s3eEdkThreadRunOnOS((s3eEdkThreadFunc)rooAudio_stop, 0);
}

#define rooAudio_init rooAudio_init_wrap
#define rooAudio_play rooAudio_play_wrap
#define rooAudio_stop rooAudio_stop_wrap

#endif

void rooAudioRegisterExt()
{
    /* fill in the function pointer struct for this extension */
    void* funcPtrs[3];
    funcPtrs[0] = (void*)rooAudio_init;
    funcPtrs[1] = (void*)rooAudio_play;
    funcPtrs[2] = (void*)rooAudio_stop;

    /*
     * Flags that specify the extension's use of locking and stackswitching
     */
    int flags[3] = { 0 };

    /*
     * Register the extension
     */
    s3eEdkRegister("rooAudio", funcPtrs, sizeof(funcPtrs), flags, rooAudioInit, rooAudioTerminate, 0);
}

#if !defined S3E_BUILD_S3ELOADER

#if defined S3E_EDK_USE_STATIC_INIT_ARRAY
int rooAudioStaticInit()
{
    void** p = g_StaticInitArray;
    void* end = p + g_StaticArrayLen;
    while (*p) p++;
    if (p < end)
        *p = (void*)&rooAudioRegisterExt;
    return 0;
}

int g_rooAudioVal = rooAudioStaticInit();

#elif defined S3E_EDK_USE_DLLS
S3E_EXTERN_C S3E_DLL_EXPORT void RegisterExt()
{
    rooAudioRegisterExt();
}
#endif

#endif
